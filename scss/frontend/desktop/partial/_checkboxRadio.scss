
.control {
  position: relative;
  display: inline-block;
  cursor: pointer;
  padding-left:25px;
  input {
	  position: absolute;
	  z-index: -1;
	  opacity: 0;
	  }
	span{    color: #333;
    font-size: 1.4rem;}  
}
.controlIndicator {
  position: absolute;
  top: 50%;margin-top:-8px;
  left: 0;
  width: 16px;
  height: 16px;
  background-color: transparent;
  border: 1px solid #ccc;
  @include border-radius(2px);
  }

.control--radio .controlIndicator {
 @include border-radius(50%); }

/* Hover and focus states */
.control:hover input ~ .controlIndicator,
.control input:focus ~ .controlIndicator {
  background-color: transparent;
  border: 1px solid #ddd;
  @include border-radius(2px); }

/* Checked state */
.control input:checked ~ .controlIndicator {
  background-color: #02a569;
  border: 1px solid #02a569; }
  
.compareCheck input:checked ~ .controlIndicator{
background-color:#fff;
border-color:#ccc;
}
/* Hover state whilst checked */
.control:hover input:not([disabled]):checked ~ .controlIndicator,
.control input:checked:focus ~ .controlIndicator {
  background-color: #02a569;
  border: 1px solid #02a569; }
  
.compareCheck:hover input:not([disabled]):checked ~ .controlIndicator,
.compareCheck input:checked:focus ~ .controlIndicator {
  background-color: #fff;
  border-color: #ccc; }

/* Disabled state */
.control input:disabled ~ .controlIndicator {
  pointer-events: none;
  opacity: .6;
  background-color: #e6e6e6; }

/* Check mark */
.controlIndicator:after {
  position: absolute;
  display: none;
  content: ''; }
  
/* Show check mark */
.control input:checked ~ .controlIndicator:after {
  display: block; }

/* Checkbox tick */
.controlCheckbox .controlIndicator:after {
  top: 1px;
  left: 5px;
  width: 5px;
  height: 10px;
  @include transform(rotate(45deg));
  border: solid #fff;
  border-width: 0 2px 2px 0; }
  
.compareCheck .controlIndicator:after{border-color:#333;}
/* Disabled tick colour */
.controlCheckbox input:disabled ~ .controlIndicator:after {
  border-color: #7b7b7b; }

/* Radio button inner circle */
.control--radio .controlIndicator:after {
  top: 7px;
  left: 7px;
  width: 6px;
  height: 6px;
  @include border-radius(50%);
  background-color: #fff; }

/* Disabled circle colour */
.control--radio input:disabled ~ .controlIndicator:after {
  background-color: #7b7b7b; }
  
  
  
  
  
  
/*different radio*/


input[type='radio'] {
   -webkit-appearance: none;
}
input[type="radio"] {
  display: none;
} 
input[type="radio"]+label:before {
  content: "";
  /* create custom radiobutton appearance */
  display: inline-block;
  width: 14px;
  height: 14px;
  padding: 0;
  margin-right: 10px;
  /* background-color only for content */
  background-clip: content-box;
  border: 1px solid #cccccc;
  background-color: #fff;
  border-radius: 50%;    box-sizing: initial;
}

/* appearance for checked radiobutton */
input[type="radio"]:checked + label:before {
    background-color: #fff;
    padding: 0;
    border: solid 5px #02a569;
	width: 6px;
    height: 6px;
}

/* optional styles, I'm using this for centering radiobuttons */
input[type="radio"]+label {
display: flex;
    align-items: center;
    font-size: 16px;
    font-weight: 600;
}


.shortList{
	position: absolute;
	right:0;
	top:0;
	input[type="checkbox"] {
	  display: none;
	  
		  &+ label {
			position: absolute;
			z-index: 100;
			height: 25px;
			width: 25px;
			right:0;top:0;
			display: block;
			text-align: center;
			line-height: 20px;
			cursor: pointer;
			@include transition(all 300ms ease);
			
			
			svg {
				display: inline-flex;
				vertical-align: middle;
				width: 16px;
				fill:none;stroke:#FFA81E;stroke-width:5;stroke-miterlimit:10;
			}
			span{font-size:1rem;color:#fff;position:relative;right:5px;}
		}
		&:checked{
			&+label{
				svg {
					@include transition(all 300ms ease-in-out);
					fill: #FFA81E;
					@include transform(scale(1.1));
				}
				
			}
		}
	}
}
